import java.util.Comparator;

public class ComparatorForStringFromSecondChar implements Comparator<String> {
    @Override
    public int compare(String o1, String o2) {
        if(o1==null|| o2==null)
            return -1;
        else if(o1.isEmpty()|| o2.isEmpty())
            return -1;
        else if (o2.substring(1).compareTo(o1.substring(1))>1)
            return 1;
        else if (o2.compareTo(o1)>1)
            return 1;
        else return -1;
    }
}
class ComparatorForStringFromSecondCharTest {
    Set<String> fullData;

    @org.junit.jupiter.api.BeforeEach
    void setUp() {
        fullData=new TreeSet<String>(new ComparatorForStringFromSecondChar());
        fullData.add("ab");
        fullData.add("");
        fullData.add("null");
        fullData.add("b");
        fullData.add("ac");

    }

    @org.junit.jupiter.api.AfterEach
    void tearDown() {
    }

    @org.junit.jupiter.api.Test
    void compare() {
    }
   @Test
   public void shouldCompareByReversingOrder() throws Exception
   {
        assertEquals(Set.of("ac","b","ab"),fullData);
   }
}
